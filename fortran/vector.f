	REAL*8	FUNCTION MODUL(V)
	IMPLICIT NONE

	REAL*8	V(3)
	
	MODUL = SQRT(V(1)**2 + V(2)**2 + V(3)**2)
	END


	REAL*8 FUNCTION DOTPRD(V1,V2)
	IMPLICIT NONE

	REAL*8 V1(3), V2(3)
	REAL*8 DP
	INTEGER*2 I

	DP = 0
	DO I=1,3
		DP = DP + V1(I) * V2(I)
	ENDDO
	DOTPRD = DP
	END

	SUBROUTINE CRSPRD(V1,V2,CP)
	IMPLICIT NONE
	REAL*8 V1(3),V2(3),CP(3)

	CP(1) = V1(2)*V2(3) - V1(3)*V2(2)
	CP(2) = V1(3)*V2(1) - V1(1)*V2(3)
	CP(3) = V1(1)*V2(2) - V1(2)*V2(1)
	RETURN
	END

	SUBROUTINE NORM(V,NV)
	IMPLICIT NONE
	REAL*8 V(3),NV(3)
	REAL*8 M
	REAL*8 MODUL
	INTEGER I

	M = MODUL(V)
	IF (M .NE. 0) THEN
	    DO I=1,3
	        NV(I) = V(I) / M
	    ENDDO
        ELSE
	    DO I=1,3
		NV(I) = 0
	    ENDDO
	END IF
	RETURN
	END

	REAL*8 FUNCTION ANGLE(V1,V2)
	IMPLICIT NONE
	REAL*8 V1(3)
	REAL*8 V2(3)
	REAL*8 MODUL,DOTPRD
	REAL*8 DP
	REAL*8 AB

	DP = DOTPRD(V1,V2)
	AB = MODUL(V1) * MODUL(V2)

	ANGLE = ACOS(DP / AB)
	RETURN
	END

	SUBROUTINE VECADD(A,B,R)
	IMPLICIT NONE
	REAL*8	A(3),B(3),R(3)
	INTEGER	I

	DO I=1,3
	    R(I) = A(I) + B(I)
	ENDDO
	RETURN
	END

	SUBROUTINE VECSUB(A,B,R)
	IMPLICIT NONE
	REAL*8	A(3),B(3),R(3)
	INTEGER	I

	DO I=1,3
	    R(I) = A(I) - B(I)
	ENDDO
	RETURN
	END

	SUBROUTINE VECCPY(O,D)
	IMPLICIT NONE
	REAL*8 O(3),D(3)
	INTEGER I

	DO I=1,3
	    D(I) = O(I)
	ENDDO
	RETURN
	END	
	
	SUBROUTINE VECMUL(O,S,D)
	IMPLICIT NONE
	REAL*8 O(3),S,D(3)
	INTEGER I

	DO I=1,3
	    D(I) =S*O(I)
	ENDDO
	RETURN
	END

	SUBROUTINE VECINV(O,D)
	IMPLICIT NONE
	REAL*8 O(3),D(3)
	CALL VECMUL(O,-1.0D0,D)
	RETURN
	END

